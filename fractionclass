#include<algorithm>
#include<iostream>
class Fraction
{

    int numerator,denominator;

    public:

    Fraction(int numerator,int denominator)
    {
        this->numerator=numerator;
        this->denominator=denominator;

    }
    void add(Fraction const&f2)
    {
        int lcm=denominator*f2.denominator;
        int x=lcm/denominator;
        int y=lcm/f2.denominator;
        int num=(x*numerator)+(y*f2.numerator);
        numerator=num;
        denominator=lcm;
        simplify();


    }
    void simplify()
    {
        int gcd=1;
        int i=1;
        int j=std::min(this->numerator,this->denominator);
        for(;i<=j;i++)
        {
            if(this->numerator%i==0&&this->denominator%i==0)
            {
                gcd=i;
            }
        }
        this->numerator=this->numerator/gcd;
        this->denominator=this->denominator/gcd;

    }
    void print()
    {
        std::cout<<this->numerator<<'/'<<this->denominator<<std::endl;

    }

};
