Given a binary tree and data of two nodes, find 'LCA' (Lowest Common Ancestor) of the given two nodes in the binary tree.
LCA
LCA of two nodes A and B is the lowest or deepest node which has both A and B as its descendants. 


/**********************************************************
	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/



int getLCA(BinaryTreeNode <int>* root , int a, int b) {
    // Write your code here
	if(root==NULL)
	return -1;

   if(a==root->data||b==root->data)
	return root->data;

	int left_part=getLCA(root->left,  a,  b);
	int right_part=getLCA(root->right,  a,  b);

	if(left_part==-1&&right_part==-1)
        return -1;

		else if(left_part==-1&&right_part!=-1)
		return right_part;

		else if (left_part!=-1&&right_part==-1)
		return left_part;

		else
		{
			return root->data;
		}
	


}
