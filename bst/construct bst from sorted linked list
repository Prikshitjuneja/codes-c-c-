Code: Construct BST from a Sorted Array
Send Feedback
Given a sorted integer array A of size n, which contains all unique elements. You need to construct a balanced BST from this input array. Return the root of constructed BST.
Note: If array size is even, take first mid as root.

/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
BinaryTreeNode<int> *constructTreehelper(int *input, int st,int end)
{
	if(st>end)
	return NULL;

    int mid=(st+end)/2;
	BinaryTreeNode<int>*root=new BinaryTreeNode<int>(input[mid]);
	root->left=constructTreehelper(input,  st,  mid-1);
	root->right=constructTreehelper(input,  mid+1,  end);
	return root;

}

    BinaryTreeNode<int> *constructTree(int *input, int n) {
  // Write your code here
  return constructTreehelper(input, 0, n - 1);
}
