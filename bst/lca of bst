Given a binary search tree and data of two nodes, find 'LCA' (Lowest Common Ancestor) of the given two nodes in the BST.
LCA
LCA of two nodes A and B is the lowest or deepest node which has both A and B as its descendants. 


/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public: 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this->data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/

int getLCA(BinaryTreeNode<int>* root , int val1 , int val2){
    // Write your code here
	if(root==NULL)
	return -1;

	if(val1==root->data||val2==root->data)
	return root->data;

	else if((val1<root->data&&val2>root->data)||(val1>root->data&&val2<root->data))
	return root->data;

	else if(val1<root->data&&val2<root->data)
	return getLCA(root->left,  val1,  val2);

	else if(val1>root->data&&val2>root->data)
	return getLCA(root->right,  val1,  val2);


}
