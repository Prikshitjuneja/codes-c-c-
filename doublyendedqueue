
//deque using circular array
#include<stdio.h>
#include<stdlib.h>
#define max_size 5
int front=-1;
int rear=-1;
int deque[max_size];
void enqueue_rear(int x);
void enqueue_front(int x);
void dequeue_front();
void dequeue_rear();
int main()
{
     while(1)

  {int x;
  int choice;
  printf("enter the choice:\n 1 for enqueue_rear operation:\n 2 for enqueue_front opeartion\n 3 for dequeue_front the queue\n 4  for dequeue_rear opeartion\n 5 for print\n 6 for exit\n  ");
  scanf("%d",&choice);
      switch(choice)
      {
      case 1:

        printf("enter the value of an element u want to insert\n");
        scanf("%d",&x);
        enqueue_rear(x);
        break;
      case 2:
           printf("enter the value of an element u want to insert\n");
        scanf("%d",&x);
        enqueue_front(x);

        break;
      case 3:
        dequeue_front();
        break;
      case 4:
        dequeue_rear();
        break;
      case 5:
        printf("the elements of deque will be\n");
        while(front!=rear)
        {
            printf("%d ",deque[front]);
            front=(front+1)%(max_size);
        }
        printf("%d ",deque[front]);

break;
      case 6:
        exit(0);
        break;
      }
  }
}
void enqueue_front(int x)
{
    if((front=rear+1)||(front=0&&rear==max_size-1))
    printf("overflow!");
    else if(front==-1&&rear==-1)
    {
        front=rear=0;
        deque[front]=x;
    }
    else if(front==0)
    {
        front=max_size-1;
        deque[front]=x;
    }
    else
    {
        front--;
        deque[front]=x;
    }
}
void enqueue_rear(int x)
{
   if((front=rear+1)||(front=0&&rear==max_size-1))
    printf("overflow!");
    else if(front==-1&&rear==-1)
    {
        front=rear=0;
        deque[rear]=x;
    }
    else if(rear==max_size-1)
    {
        rear=0;
        deque[rear]=x;
    }
    else{
        rear++;
        deque[rear]=x;
    }
}
void dequeue_front()
{
    if(front==-1&&rear==-1)
        printf("empty!  ");
    else if(front==rear)
    {
        printf("deleted element will be %d\n",deque[front]);
        front=rear=-1;
    }
    else if(front=max_size-1)
    {
         printf("deleted element will be %d\n",deque[front]);
         front=0;
    }
    else{
        printf("deleted element will be %d\n",deque[front]);
        front++;
    }
}
void deque_rear()
{
     if(front==-1&&rear==-1)
        printf("empty!  ");
    else if(front==rear)
    {
        printf("deleted element will be %d\n",deque[rear]);
        front=rear=-1;
    }
    else if(rear==0)
    {
        printf("deleted element will be %d\n",deque[rear]);
        rear=max_size-1;
    }
    else{
        printf("deleted element will be %d\n",deque[rear]);
        rear=rear--;
    }
}
