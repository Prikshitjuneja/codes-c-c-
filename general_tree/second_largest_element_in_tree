Second Largest Element In Tree
Send Feedback
Given a generic tree, find and return the node with second largest value in given tree.
Note: Return NULL if no node with required value is present.



my method first approach in my mind..
TreeNode<int>* getLargestNode(TreeNode<int>*root)
{
    if(root==NULL)
    return NULL;

    TreeNode<int>*max=root;
    for(int i=0;i<root->children.size();i++)
    {
        TreeNode<int>*smallmax=getLargestNode(root->children[i]);
       

         if(smallmax->data>max->data)
        max=smallmax;


    }
    return max;
}
TreeNode<int>*justsmall(TreeNode<int>*root,TreeNode<int>*max)
{
     TreeNode<int>*small=NULL;
     if(root->data<max->data)
     small=root;

     for(int i=0;i<root->children.size();i++)
     {
         TreeNode<int>*smallans=justsmall(root->children[i], max);
         if(small==NULL)
         small=smallans;

         if(smallans!=NULL)
         {
             if(smallans->data>small->data&&smallans->data<max->data)  //pehle hmne root ko small mana then root ke children mein root se bda and max se chota element dhundha
             {
                 small=smallans;
             }
         }
     }
     return small;

}
